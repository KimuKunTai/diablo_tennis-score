const form = document.getElementById('gameForm');
const recordList = document.getElementById('recordList');
const chartCanvas = document.getElementById('winRateChart');
let records = JSON.parse(localStorage.getItem('records') || '[]');

form.addEventListener('submit', e => {
  e.preventDefault();
  const date = document.getElementById('date').value;
  const players = [
    { name: document.getElementById('player1').value, score: Number(document.getElementById('score1').value) },
    { name: document.getElementById('player2').value, score: Number(document.getElementById('score2').value) },
    { name: document.getElementById('player3').value, score: Number(document.getElementById('score3').value) },
    { name: document.getElementById('player4').value, score: Number(document.getElementById('score4').value) },
  ];
  const entry = { date, players };
  records.push(entry);
  localStorage.setItem('records', JSON.stringify(records));
  renderRecords();
  updateChart();
  form.reset();
});

function renderRecords() {
  if (records.length === 0) {
    recordList.innerHTML = '<p>기록이 없습니다.</p>';
    return;
  }
  recordList.innerHTML = records.map(r => {
    const playerStr = r.players.map(p => `${p.name}(${p.score})`).join(', ');
    return `<div>${r.date} | ${playerStr}</div>`;
  }).join('');
}

function updateChart() {
  const playerStats = {};
  records.forEach(r => {
    let maxScore = Math.max(...r.players.map(p => p.score));
    r.players.forEach(p => {
      if (!playerStats[p.name]) playerStats[p.name] = { played: 0, wins: 0 };
      playerStats[p.name].played += 1;
      if (p.score === maxScore) playerStats[p.name].wins += 1;
    });
  });
  const labels = Object.keys(playerStats);
  const winRates = labels.map(name => {
    const stat = playerStats[name];
    return stat.wins / stat.played * 100;
  });
  new Chart(chartCanvas, {
    type: 'bar',
    data: {
      labels,
      datasets: [{
        label: '승률(%)',
        data: winRates,
        backgroundColor: '#4fe3c1'
      }]
    },
    options: { responsive: true, scales: { y: { min: 0, max: 100 } } }
  });
}

function exportCSV() {
  let csv = "날짜,선수,점수\n";
  records.forEach(r => {
    r.players.forEach(p => {
      csv += `${r.date},${p.name},${p.score}\n`;
    });
  });
  const blob = new Blob([csv], { type: "text/csv" });
  const url = URL.createObjectURL(blob);
  const a = document.createElement("a");
  a.href = url;
  a.download = "diablo_records.csv";
  a.click();
  URL.revokeObjectURL(url);
}

renderRecords();
updateChart();
